{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "/Users/qaq/Desktop/pymarl extension/src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.19.1",
      "sacred==0.8.1",
      "torch==1.3.0"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "2cda2b595c7aa4bafa06ef5b594e38a34176a769",
        "dirty": true,
        "url": "https://github.com/simsimiSION/pymarl-algorithm-extension.git"
      },
      {
        "commit": "2cda2b595c7aa4bafa06ef5b594e38a34176a769",
        "dirty": true,
        "url": "https://github.com/simsimiSION/pymarl-algorithm-extension.git"
      },
      {
        "commit": "2cda2b595c7aa4bafa06ef5b594e38a34176a769",
        "dirty": true,
        "url": "https://github.com/simsimiSION/pymarl-algorithm-extension.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources/main_63d7d00072f4e5be0310acb11aa60581.py"
      ],
      [
        "run.py",
        "_sources/run_ced5c90cbf8fde523fa077533a0cd394.py"
      ],
      [
        "utils/logging.py",
        "_sources/logging_aa14e56e60b01dd7a9ddb8e6cdf36b85.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/site-packages/sacred/stdout_capturing.py\", line 163, in tee_output_fd\n    yield out  # let the caller do their printing\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/site-packages/sacred/run.py\", line 238, in __call__\n    self.result = self.main_function(*args)\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/site-packages/sacred/config/captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"src/main.py\", line 35, in my_main\n    run(_run, config, _log)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/run.py\", line 49, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/run.py\", line 185, in run_sequential\n    episode_batch = runner.run(test_mode=False)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/runners/episode_runner.py\", line 67, in run\n    actions = self.mac.select_actions(self.batch, t_ep=self.t, t_env=self.t_env, test_mode=test_mode)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/controllers/basic_controller.py\", line 22, in select_actions\n    agent_outputs = self.forward(ep_batch, t_ep, test_mode=test_mode)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/controllers/basic_controller.py\", line 29, in forward\n    agent_outs, self.hidden_states = self.agent(agent_inputs, self.hidden_states)\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/site-packages/torch/nn/modules/module.py\", line 541, in __call__\n    result = self.forward(*input, **kwargs)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/modules/agents/commnet_agent.py\", line 32, in forward\n    neighbor = self._get_neighbor(inputs)\n",
    "  File \"/Users/qaq/Desktop/pymarl extension/src/modules/agents/commnet_agent.py\", line 69, in _get_neighbor\n    neightbors = th.stack(*neightbors, dim=0)\n",
    "TypeError: stack() takes from 1 to 2 positional arguments but 5 were given\n",
    "\nDuring handling of the above exception, another exception occurred:\n\n",
    "Traceback (most recent call last):\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/contextlib.py\", line 99, in __exit__\n    self.gen.throw(type, value, traceback)\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/site-packages/sacred/stdout_capturing.py\", line 175, in tee_output_fd\n    tee_stdout.wait(timeout=1)\n",
    "  File \"/Users/qaq/anaconda3/lib/python3.6/subprocess.py\", line 1449, in wait\n    raise TimeoutExpired(self.args, timeout)\n",
    "subprocess.TimeoutExpired: Command '['tee', '-a', '/var/folders/xz/2w0f534d5r93n_nf4zp5cqrc0000gn/T/tmpmgel3g8r']' timed out after 1 seconds\n"
  ],
  "heartbeat": "2020-08-09T07:58:23.538670",
  "host": {
    "ENV": {},
    "cpu": "Intel(R) Core(TM) i5-8259U CPU @ 2.30GHz",
    "hostname": "simsimideMacBook-Pro.local",
    "os": [
      "Darwin",
      "Darwin-19.6.0-x86_64-i386-64bit"
    ],
    "python_version": "3.6.3"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.map_name=2s3z"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2020-08-09T07:58:01.171241",
  "status": "FAILED",
  "stop_time": "2020-08-09T07:58:23.542214"
}